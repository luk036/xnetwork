language: cpp
dist: focal
matrix:
  include:
    - os: linux
      addons: &gcc9
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
            - libboost-all-dev
            - doctest-dev
            - lcov
      env: COMPILER=gcc GCC=9 BUILD_TYPE='Debug'
    - os: linux
      addons: *gcc9
      env: COMPILER=gcc GCC=9 BUILD_TYPE='Release'
    - os: linux
      addons: *gcc9
      env: COMPILER=gcc GCC=9 BUILD_TYPE='Coverage'
    - os: linux
      addons: &gcc10
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - libboost-all-dev
            - doctest-dev
            - lcov
      env: COMPILER=gcc GCC=10 BUILD_TYPE='Debug'
    - os: linux
      addons: *gcc10
      env: COMPILER=gcc GCC=10 BUILD_TYPE='Release'
    - os: linux
      addons: &clang10
        apt:
          sources: ['llvm-toolchain-bionic-10', 'ubuntu-toolchain-r-test']
          packages:
            - clang-10
            - libstdc++-10-dev
            - libboost-all-dev
            - doctest-dev
            - lcov
      env: COMPILER=clang CLANG=10 BUILD_TYPE='Debug'
    - os: linux
      addons: *clang10
      env: COMPILER=clang CLANG=10 BUILD_TYPE='Release'
    - os: linux
      addons: &clang11
        apt:
          sources: ['llvm-toolchain-bionic-10', 'ubuntu-toolchain-r-test']
          packages:
            - clang-11
            - libstdc++-10-dev
            - libboost-all-dev
            - doctest-dev
            - lcov
      env: COMPILER=clang CLANG=11 BUILD_TYPE='Debug'
    - os: linux
      addons: *clang11
      env: COMPILER=clang CLANG=11 BUILD_TYPE='Release'
      #    - os: linux
      #      addons: *clang10
      #      env: COMPILER=clang CLANG=10 BUILD_TYPE='Release'
      #    - os: osx
      #      osx_image: xcode12
      #      addons:
      #        homebrew:
      #          packages:
      #            - lcov
      #            - libboost-all-dev
      #            - doctest-dev
      #          update: true
      #      env: COMPILER=clang CLANG=10 BUILD_TYPE='Release'

env:
  global:
    - MINCONDA_VERSION="latest"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang;
      fi
install:
  - mkdir -p $HOME/.cache
  - touch $HOME/.cache/mydependency.so
  # Define the version of miniconda to download
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      MINCONDA_OS=$MINCONDA_LINUX;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      MINCONDA_OS=$MINCONDA_OSX;
    fi
  - wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
  - export CONDA_PREFIX=$HOME/miniconda
  - bash miniconda.sh -b -p $CONDA_PREFIX
  - export PATH="$CONDA_PREFIX/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install -c conda-forge benchmark fmt spdlog doctest
script:
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      mkdir build && cd build;
      cmake -DENABLE_COVERAGE=1 -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib ..;
      make -j2
      make coverage
    else
      mkdir build && cd build;
      cmake -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH=$CONDA_PREFIX -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_SYSTEM_IGNORE_PATH=/usr/lib ..;
      make -j2
      ctest -V -j 2
    fi
after_success:
  - |
    if [[ "$BUILD_TYPE" == "Coverage" ]]; then
      lcov --list coverage_out.info.cleaned
      bash <(curl -s https://codecov.io/bash) -f coverage_out.info.cleaned || echo "Codecov did not collect coverage reports"
    fi
notifications:
  email: false
  slack:
    rooms:
      - loksu:jErzuILLSNn9qGYkkILvBwje#xnetwork
